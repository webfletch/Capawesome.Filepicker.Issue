{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\n\nexport interface FilePickerPlugin {\n  /**\n   * Convert a HEIC image to JPEG.\n   *\n   * Only available on iOS.\n   *\n   * @since 0.6.0\n   */\n  convertHeicToJpeg(\n    options: ConvertHeicToJpegOptions,\n  ): Promise<ConvertHeicToJpegResult>;\n  /**\n   * Open the file picker that allows the user to select one or more files.\n   */\n  pickFiles(options?: PickFilesOptions): Promise<PickFilesResult>;\n  /**\n   * Pick one or more images from the gallery.\n   *\n   * On iOS 13 and older it only allows to pick one image.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.5.3\n   */\n  pickImages(options?: PickImagesOptions): Promise<PickImagesResult>;\n  /**\n   * Pick one or more images or videos from the gallery.\n   *\n   * On iOS 13 and older it only allows to pick one image or video.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.5.3\n   */\n  pickMedia(options?: PickMediaOptions): Promise<PickMediaResult>;\n  /**\n   * Pick one or more videos from the gallery.\n   *\n   * On iOS 13 and older it only allows to pick one video.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.5.3\n   */\n  pickVideos(options?: PickVideosOptions): Promise<PickVideosResult>;\n  /**\n   * Called when the file picker is dismissed.\n   *\n   * Only available on iOS.\n   *\n   * @since 0.6.2\n   */\n  addListener(\n    eventName: 'pickerDismissed',\n    listenerFunc: () => void,\n  ): Promise<PluginListenerHandle>;\n  /**\n   * Remove all listeners for this plugin.\n   *\n   * @since 0.6.2\n   */\n  removeAllListeners(): Promise<void>;\n}\n\n/**\n * @since 0.6.0\n */\nexport interface ConvertHeicToJpegOptions {\n  /**\n   * The path of the HEIC image.\n   *\n   * @example '/path/to/image.heic'\n   * @since 0.6.0\n   */\n  path: string;\n}\n\n/**\n * @since 0.6.0\n */\nexport interface ConvertHeicToJpegResult {\n  /**\n   * The path of the converted JPEG image.\n   *\n   * @example '/path/to/image.jpeg'\n   * @since 0.6.0\n   */\n  path: string;\n}\n\nexport interface PickFilesOptions {\n  /**\n   * List of accepted file types.\n   * Look at [IANA Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml) for a complete list of standard media types.\n   *\n   * This option is ignored if `limit` is set.\n   *\n   * @example ['image/png', 'application/pdf']\n   */\n  types?: string[];\n  /**\n   * The maximum number of files that the user can select.\n   * Setting this to `0` sets the selection limit to unlimited.\n   *\n   * Currently, only `0` and `1` are supported.\n   *\n   * @default 0\n   * @example 1\n   * @since 6.0.0\n   */\n  limit?: number;\n  /**\n   * Whether to read the file data.\n   *\n   * @default false\n   */\n  readData?: boolean;\n}\n\nexport interface PickFilesResult {\n  files: PickedFile[];\n}\n\nexport interface PickedFile {\n  /**\n   * The Blob instance of the file.\n   *\n   * Only available on Web.\n   */\n  blob?: Blob;\n  /**\n   * The Base64 string representation of the data contained in the file.\n   *\n   * Is only provided if `readData` is set to `true`.\n   */\n  data?: string;\n  /**\n   * The duration of the video in seconds.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.5.3\n   */\n  duration?: number;\n  /**\n   * The height of the image or video in pixels.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.5.3\n   */\n  height?: number;\n  /**\n   * The mime type of the file.\n   */\n  mimeType: string;\n  /**\n   * The last modified timestamp of the file in milliseconds.\n   *\n   * @since 0.5.9\n   */\n  modifiedAt?: number;\n  /**\n   * The name of the file.\n   */\n  name: string;\n  /**\n   * The path of the file.\n   *\n   * Only available on Android and iOS.\n   */\n  path?: string;\n  /**\n   * The size of the file in bytes.\n   */\n  size: number;\n  /**\n   * The width of the image or video in pixels.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.5.3\n   */\n  width?: number;\n}\n\n/**\n * @since 0.5.3\n */\nexport interface PickMediaOptions {\n  /**\n   * Whether to read the file data.\n   *\n   * @default false\n   */\n  readData?: boolean;\n  /**\n   * Whether to avoid transcoding, if possible.\n   *\n   * On iOS, for example, HEIC images are automatically transcoded to JPEG.\n   *\n   * Only available on iOS.\n   *\n   * @default true\n   * @see https://developer.apple.com/documentation/photokit/phpickerconfiguration/assetrepresentationmode/current\n   */\n  skipTranscoding?: boolean;\n  /**\n   * The maximum number of files that the user can select.\n   * Setting this to `0` sets the selection limit to unlimited.\n   *\n   * On Android and Web, only `0` and `1` are supported.\n   *\n   * @default 0\n   * @example 1\n   * @since 5.2.0\n   */\n  limit?: number;\n  /**\n   * Whether an ordered number is displayed instead of a check mark in the selection badge.\n   *\n   * Only available on iOS (15+).\n   *\n   * @default false\n   * @since 5.3.0\n   */\n  ordered?: boolean;\n}\n\n/**\n * @since 0.5.3\n */\nexport type PickMediaResult = PickFilesResult;\n\n/**\n * @since 0.5.3\n */\nexport type PickImagesOptions = PickMediaOptions;\n\n/**\n * @since 0.5.3\n */\nexport type PickImagesResult = PickMediaResult;\n\n/**\n * @since 0.5.3\n */\nexport type PickVideosOptions = PickMediaOptions;\n\n/**\n * @since 0.5.3\n */\nexport type PickVideosResult = PickMediaResult;\n"]}